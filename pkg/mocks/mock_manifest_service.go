// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/sheaf (interfaces: ManifestService)

// Package mocks is a generated GoMock package.
package mocks

import (
	sheaf "github.com/bryanl/sheaf/pkg/sheaf"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManifestService is a mock of ManifestService interface
type MockManifestService struct {
	ctrl     *gomock.Controller
	recorder *MockManifestServiceMockRecorder
}

// MockManifestServiceMockRecorder is the mock recorder for MockManifestService
type MockManifestServiceMockRecorder struct {
	mock *MockManifestService
}

// NewMockManifestService creates a new mock instance
func NewMockManifestService(ctrl *gomock.Controller) *MockManifestService {
	mock := &MockManifestService{ctrl: ctrl}
	mock.recorder = &MockManifestServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManifestService) EXPECT() *MockManifestServiceMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockManifestService) Add(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockManifestServiceMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockManifestService)(nil).Add), arg0)
}

// List mocks base method
func (m *MockManifestService) List() ([]sheaf.BundleManifest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]sheaf.BundleManifest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockManifestServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockManifestService)(nil).List))
}
