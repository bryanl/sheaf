// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/sheaf (interfaces: ImageReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/google/go-containerregistry/pkg/v1"
	reflect "reflect"
)

// MockImageReader is a mock of ImageReader interface
type MockImageReader struct {
	ctrl     *gomock.Controller
	recorder *MockImageReaderMockRecorder
}

// MockImageReaderMockRecorder is the mock recorder for MockImageReader
type MockImageReaderMockRecorder struct {
	mock *MockImageReader
}

// NewMockImageReader creates a new mock instance
func NewMockImageReader(ctrl *gomock.Controller) *MockImageReader {
	mock := &MockImageReader{ctrl: ctrl}
	mock.recorder = &MockImageReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageReader) EXPECT() *MockImageReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockImageReader) Read(arg0 string) (v1.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(v1.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockImageReaderMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockImageReader)(nil).Read), arg0)
}
