// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/bundle (interfaces: Layout)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	image "github.com/pivotal/image-relocation/pkg/image"
	reflect "reflect"
)

// MockLayout is a mock of Layout interface
type MockLayout struct {
	ctrl     *gomock.Controller
	recorder *MockLayoutMockRecorder
}

// MockLayoutMockRecorder is the mock recorder for MockLayout
type MockLayoutMockRecorder struct {
	mock *MockLayout
}

// NewMockLayout creates a new mock instance
func NewMockLayout(ctrl *gomock.Controller) *MockLayout {
	mock := &MockLayout{ctrl: ctrl}
	mock.recorder = &MockLayoutMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLayout) EXPECT() *MockLayoutMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockLayout) Add(arg0 image.Name) (image.Digest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(image.Digest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add
func (mr *MockLayoutMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockLayout)(nil).Add), arg0)
}

// Find mocks base method
func (m *MockLayout) Find(arg0 image.Name) (image.Digest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0)
	ret0, _ := ret[0].(image.Digest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find
func (mr *MockLayoutMockRecorder) Find(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockLayout)(nil).Find), arg0)
}

// Push mocks base method
func (m *MockLayout) Push(arg0 image.Digest, arg1 image.Name) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Push", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Push indicates an expected call of Push
func (mr *MockLayoutMockRecorder) Push(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Push", reflect.TypeOf((*MockLayout)(nil).Push), arg0, arg1)
}
