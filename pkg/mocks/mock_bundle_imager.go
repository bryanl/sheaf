// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/sheaf (interfaces: BundleImager)

// Package mocks is a generated GoMock package.
package mocks

import (
	sheaf "github.com/bryanl/sheaf/pkg/sheaf"
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/google/go-containerregistry/pkg/v1"
	reflect "reflect"
)

// MockBundleImager is a mock of BundleImager interface
type MockBundleImager struct {
	ctrl     *gomock.Controller
	recorder *MockBundleImagerMockRecorder
}

// MockBundleImagerMockRecorder is the mock recorder for MockBundleImager
type MockBundleImagerMockRecorder struct {
	mock *MockBundleImager
}

// NewMockBundleImager creates a new mock instance
func NewMockBundleImager(ctrl *gomock.Controller) *MockBundleImager {
	mock := &MockBundleImager{ctrl: ctrl}
	mock.recorder = &MockBundleImagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBundleImager) EXPECT() *MockBundleImagerMockRecorder {
	return m.recorder
}

// CreateImage mocks base method
func (m *MockBundleImager) CreateImage(arg0 sheaf.Bundle) (v1.Image, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateImage", arg0)
	ret0, _ := ret[0].(v1.Image)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateImage indicates an expected call of CreateImage
func (mr *MockBundleImagerMockRecorder) CreateImage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateImage", reflect.TypeOf((*MockBundleImager)(nil).CreateImage), arg0)
}
