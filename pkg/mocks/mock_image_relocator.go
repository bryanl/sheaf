// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/sheaf (interfaces: ImageRelocator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	image "github.com/pivotal/image-relocation/pkg/image"
	reflect "reflect"
)

// MockImageRelocator is a mock of ImageRelocator interface
type MockImageRelocator struct {
	ctrl     *gomock.Controller
	recorder *MockImageRelocatorMockRecorder
}

// MockImageRelocatorMockRecorder is the mock recorder for MockImageRelocator
type MockImageRelocatorMockRecorder struct {
	mock *MockImageRelocator
}

// NewMockImageRelocator creates a new mock instance
func NewMockImageRelocator(ctrl *gomock.Controller) *MockImageRelocator {
	mock := &MockImageRelocator{ctrl: ctrl}
	mock.recorder = &MockImageRelocatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageRelocator) EXPECT() *MockImageRelocatorMockRecorder {
	return m.recorder
}

// Relocate mocks base method
func (m *MockImageRelocator) Relocate(arg0, arg1 string, arg2 []image.Name) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Relocate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Relocate indicates an expected call of Relocate
func (mr *MockImageRelocatorMockRecorder) Relocate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Relocate", reflect.TypeOf((*MockImageRelocator)(nil).Relocate), arg0, arg1, arg2)
}
