// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bryanl/sheaf/pkg/sheaf (interfaces: ImageWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/google/go-containerregistry/pkg/v1"
	reflect "reflect"
)

// MockImageWriter is a mock of ImageWriter interface
type MockImageWriter struct {
	ctrl     *gomock.Controller
	recorder *MockImageWriterMockRecorder
}

// MockImageWriterMockRecorder is the mock recorder for MockImageWriter
type MockImageWriterMockRecorder struct {
	mock *MockImageWriter
}

// NewMockImageWriter creates a new mock instance
func NewMockImageWriter(ctrl *gomock.Controller) *MockImageWriter {
	mock := &MockImageWriter{ctrl: ctrl}
	mock.recorder = &MockImageWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageWriter) EXPECT() *MockImageWriterMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *MockImageWriter) Write(arg0 string, arg1 v1.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockImageWriterMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockImageWriter)(nil).Write), arg0, arg1)
}

// WriteIndex mocks base method
func (m *MockImageWriter) WriteIndex(arg0 string, arg1 v1.ImageIndex) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteIndex", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteIndex indicates an expected call of WriteIndex
func (mr *MockImageWriterMockRecorder) WriteIndex(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteIndex", reflect.TypeOf((*MockImageWriter)(nil).WriteIndex), arg0, arg1)
}
