on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
name: test and build
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0
      - name: Run linters
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          ./hacks/check-lint.sh
  test:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run tests
        run: go test -v -covermode=count ./pkg/... ./internal/...

  integration-integration:
    services:
      registry:
        image: registry:2
        ports:
          - 5000/tcp
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run tests
        env:
          REGISTRY: localhost:${{ job.services.registry.ports['5000'] }}
        run: go test -tags=integration -v ./... -count=1

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Calc coverage
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go test -v -covermode=count -coverprofile=coverage.out ./pkg/... ./internal/...
      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.0
        with:
          infile: coverage.out
          outfile: coverage.lcov
      - name: Coveralls
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v1
      - name: build
        run: |
          export GO111MODULE=on
          GOOS=linux   GOARCH=amd64 go build -o bin/ci-test-linux-amd64 ./cmd/sheaf
          GOOS=darwin  GOARCH=amd64 go build -o bin/ci-test-darwin-amd64 ./cmd/sheaf
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: binaries
          path: bin/

